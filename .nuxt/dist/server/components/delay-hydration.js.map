{"version":3,"file":"components/delay-hydration.js","sources":["webpack:///./node_modules/nuxt-delay-hydration/dist/components/DelayHydration.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nmodule.exports = void 0;\n\nvar _vueLazyHydration = _interopRequireDefault(require(\"vue-lazy-hydration\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = {\n  data() {\n    return {\n      triggerHydration: false\n    };\n  },\n\n  props: {\n    debug: {\n      type: Boolean,\n      default: false\n    },\n    forever: {\n      type: Boolean,\n      default: false\n    },\n    replayClick: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  async mounted() {\n    // already mounted or missing plugin api for some reason\n    if (this.triggerHydration || !this.$delayHydration) return;\n\n    if (typeof window === 'undefined' || !('requestIdleCallback' in window)) {\n      this.triggerHydration = true;\n      return;\n    }\n\n    const style = 'background: #e2f8e5; color: #2e9127;';\n\n    if (this.forever || this.$delayHydration.config.forever) {\n      console.info('%c[NuxtDelayHydration] Running with the \"forever\" enabled, will never hydrate.', style);\n      return;\n    }\n\n    const debug = this.debug || this.$delayHydration.config.debug;\n\n    try {\n      if (debug) {\n        // eslint-disable-next-line no-console\n        console.time('[NuxtDelayHydration] Hydration time');\n        console.info('%c[NuxtDelayHydration] Started delaying hydration via DelayHydration component.', style);\n      } // create the hydration race\n\n\n      const hydrationEvent = await this.$delayHydration.hydrationRace();\n\n      if (debug) {\n        console.log(`%c[NuxtDelayHydration] Finished delaying hydration with trigger: \"${hydrationEvent}\"`, style); // eslint-disable-next-line no-console\n\n        console.timeEnd('[NuxtDelayHydration] Hydration time');\n      }\n\n      if (this.$delayHydration.config.replayClick && this.replayClick) this.$delayHydration.replayPointerEvent(hydrationEvent, true);\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.triggerHydration = true;\n    }\n  },\n\n  render(h) {\n    return h(_vueLazyHydration.default, {\n      props: {\n        never: true,\n        triggerHydration: this.triggerHydration\n      }\n    }, this.$slots.default);\n  }\n\n};\nmodule.exports = _default;"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}